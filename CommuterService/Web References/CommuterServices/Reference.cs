//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace CommuterService.CommuterServices {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CommuterSoap", Namespace="http://tempuri.org/")]
    public partial class Commuter : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegisterDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCommuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRouteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Commuter() {
            this.Url = global::CommuterService.Properties.Settings.Default.CommuterService_CommuterServices_Commuter;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegisterDeviceCompletedEventHandler RegisterDeviceCompleted;
        
        /// <remarks/>
        public event AddCommuteCompletedEventHandler AddCommuteCompleted;
        
        /// <remarks/>
        public event AddRouteCompletedEventHandler AddRouteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RegisterDevice(System.Guid deviceId, string name, string channelURI) {
            object[] results = this.Invoke("RegisterDevice", new object[] {
                        deviceId,
                        name,
                        channelURI});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterDeviceAsync(System.Guid deviceId, string name, string channelURI) {
            this.RegisterDeviceAsync(deviceId, name, channelURI, null);
        }
        
        /// <remarks/>
        public void RegisterDeviceAsync(System.Guid deviceId, string name, string channelURI, object userState) {
            if ((this.RegisterDeviceOperationCompleted == null)) {
                this.RegisterDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterDeviceOperationCompleted);
            }
            this.InvokeAsync("RegisterDevice", new object[] {
                        deviceId,
                        name,
                        channelURI}, this.RegisterDeviceOperationCompleted, userState);
        }
        
        private void OnRegisterDeviceOperationCompleted(object arg) {
            if ((this.RegisterDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterDeviceCompleted(this, new RegisterDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCommute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddCommute(System.Guid deviceId, CommuteDefinition commute) {
            object[] results = this.Invoke("AddCommute", new object[] {
                        deviceId,
                        commute});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCommuteAsync(System.Guid deviceId, CommuteDefinition commute) {
            this.AddCommuteAsync(deviceId, commute, null);
        }
        
        /// <remarks/>
        public void AddCommuteAsync(System.Guid deviceId, CommuteDefinition commute, object userState) {
            if ((this.AddCommuteOperationCompleted == null)) {
                this.AddCommuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommuteOperationCompleted);
            }
            this.InvokeAsync("AddCommute", new object[] {
                        deviceId,
                        commute}, this.AddCommuteOperationCompleted, userState);
        }
        
        private void OnAddCommuteOperationCompleted(object arg) {
            if ((this.AddCommuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommuteCompleted(this, new AddCommuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRoute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddRoute(System.Guid deviceId, System.Guid commuteId, RouteDefinition route) {
            object[] results = this.Invoke("AddRoute", new object[] {
                        deviceId,
                        commuteId,
                        route});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddRouteAsync(System.Guid deviceId, System.Guid commuteId, RouteDefinition route) {
            this.AddRouteAsync(deviceId, commuteId, route, null);
        }
        
        /// <remarks/>
        public void AddRouteAsync(System.Guid deviceId, System.Guid commuteId, RouteDefinition route, object userState) {
            if ((this.AddRouteOperationCompleted == null)) {
                this.AddRouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRouteOperationCompleted);
            }
            this.InvokeAsync("AddRoute", new object[] {
                        deviceId,
                        commuteId,
                        route}, this.AddRouteOperationCompleted, userState);
        }
        
        private void OnAddRouteOperationCompleted(object arg) {
            if ((this.AddRouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRouteCompleted(this, new AddRouteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CommuteDefinition {
        
        private System.Guid idField;
        
        private RouteLocation startPointField;
        
        private RouteLocation endPointField;
        
        private RouteDefinition[] routesField;
        
        private string nameField;
        
        private System.DateTime departureTimeField;
        
        private System.DateTime returnTimeField;
        
        private System.DateTime lastUpdatedField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public RouteLocation StartPoint {
            get {
                return this.startPointField;
            }
            set {
                this.startPointField = value;
            }
        }
        
        /// <remarks/>
        public RouteLocation EndPoint {
            get {
                return this.endPointField;
            }
            set {
                this.endPointField = value;
            }
        }
        
        /// <remarks/>
        public RouteDefinition[] Routes {
            get {
                return this.routesField;
            }
            set {
                this.routesField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DepartureTime {
            get {
                return this.departureTimeField;
            }
            set {
                this.departureTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReturnTime {
            get {
                return this.returnTimeField;
            }
            set {
                this.returnTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RouteLocation {
        
        private GpsLocation locationField;
        
        private string addressField;
        
        /// <remarks/>
        public GpsLocation Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GpsLocation {
        
        private double latitudeField;
        
        private double longitudeField;
        
        private double altitudeField;
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Altitude {
            get {
                return this.altitudeField;
            }
            set {
                this.altitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TimeSpan {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RouteDefinition {
        
        private System.Guid idField;
        
        private RouteLocation[] wayPointsField;
        
        private GpsLocation[] routePointsField;
        
        private string nameField;
        
        private TimeSpan estimatedDurationField;
        
        private double estimatedDurationMinutesField;
        
        private double estimatedDistanceField;
        
        private System.DateTime lastUpdatedField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public RouteLocation[] WayPoints {
            get {
                return this.wayPointsField;
            }
            set {
                this.wayPointsField = value;
            }
        }
        
        /// <remarks/>
        public GpsLocation[] RoutePoints {
            get {
                return this.routePointsField;
            }
            set {
                this.routePointsField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public TimeSpan EstimatedDuration {
            get {
                return this.estimatedDurationField;
            }
            set {
                this.estimatedDurationField = value;
            }
        }
        
        /// <remarks/>
        public double EstimatedDurationMinutes {
            get {
                return this.estimatedDurationMinutesField;
            }
            set {
                this.estimatedDurationMinutesField = value;
            }
        }
        
        /// <remarks/>
        public double EstimatedDistance {
            get {
                return this.estimatedDistanceField;
            }
            set {
                this.estimatedDistanceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void RegisterDeviceCompletedEventHandler(object sender, RegisterDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddCommuteCompletedEventHandler(object sender, AddCommuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCommuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddRouteCompletedEventHandler(object sender, AddRouteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591